name: Flask CI/CD Pipeline to MS Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint Check
      run: |
        source venv/bin/activate
        pip install flake8
        flake8 .

    - name: Run Tests
      run: |
        source venv/bin/activate
        export PYTHONPATH=$PYTHONPATH:/home/runner/work/webapp1
        pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and Push Docker Image to ACR
      run: |
        az acr login --name ${{ secrets.REGISTRY_LOGIN_SERVER }}
        docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/fastapiapp:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/fastapiapp:${{ github.sha }}

    - name: Deploy to Azure Container Instance
      run: |
        az container create \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --name webapp1 \
          --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/fastapiapp:${{ github.sha }} \
          --dns-name-label webapp1 \
          --ports 80 \
          --registry-login-server ${{ secrets.REGISTRY_LOGIN_SERVER }} \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --location eastus
